{"version":3,"sources":["d3-helpers/d3-ts-chart.js","components/Chart.js","index.js"],"names":["SERIES_TYPES","D3TsChart","elRef","width","height","classList","margin","top","right","bottom","left","responsiveHeight","responsiveWidth","xScale","d3","yScale","seriesDict","forceZeroOnYaxis","this","outerWidth","offsetWidth","outerHeight","offsetHeight","undefined","draw","svg","append","attr","classed","group","range","xAxisRef","yAxisRef","name","type","fill","stroke","strokeWidth","id","includes","Error","ref","data","adjustAxes","series","adjustDimensions","updateArea","updateLine","datum","transition","duration","ease","x","d","timestamp","y","value","y0","y1","domain","call","MAX_POINTS_TO_STORE","SOCKETIO_ERRORS","Chart","state","lastTimestamp","connected","error","connect","socket","socketIOClient","props","sensorId","on","storeReading","forEach","errType","setError","setState","toString","response","reading","JSON","parse","prevState","pointsToStore","Math","max","length","push","slice","Date","toLocaleTimeString","updateChart","render","className","parentRef","ReactDOM","findDOMNode","tsChart","getElementsByClassName","addSeries","disconnect","pointsToShow","highestValueInView","map","p","zLine","zscore","updateSeries","React","Component","x-ticks","document","getElementById"],"mappings":"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","file":"static/js/main.0461d84b.chunk.js","sourcesContent":["import * as d3 from 'd3';\n\nconst SERIES_TYPES = [\"LINE\", \"AREA\"];\nconst TRANSITION_DURATION = 20;\n\nexport default class D3TsChart {\n\n  // HTML Element References\n  elRef = null;\n  svg; // Main SVG container\n  group;\n\n  // Layout config\n  margin = { top: 10, right: 30, bottom: 30, left: 30 };\n\n  outerWidth; outerHeight;\n  responsiveHeight = false;\n  responsiveWidth = false;  // responsive flags will be only true if you don't set width or height\n\n\n  // Axes\n  xScale = d3.scaleTime();\n  xAxisRef;\n  yAxisRef;\n  yScale = d3.scaleLinear();\n\n  // Series\n  seriesDict = {\n    // \"seriesname\": { type: SERIES_TYPES, ref: d3 object}\n  };\n\n  //Other config\n  forceZeroOnYaxis = true;\n\n  constructor ({ elRef, width, height, classList }) {\n    this.elRef = elRef;\n\n    //config  -- could make margins configurable too but I thought it's too much\n    this.outerWidth = width || this.elRef.offsetWidth;\n    this.outerHeight = height || this.elRef.offsetHeight;\n\n    this.classList = classList || {};\n\n    if (width === undefined) this.responsiveWidth = true;\n    if (height === undefined) this.responsiveHeight = true;\n\n    this.draw();\n  }\n\n  draw() {\n    // Main SVG\n    this.svg = d3.select(this.elRef)\n      .append(\"svg\")\n      .attr(\"width\", this.outerWidth)\n      .attr(\"height\", this.outerHeight)\n      .classed(this.classList.svg, true);\n\n    //Inner box group  (deducting margins)\n    this.group = this.svg.append(\"g\")\n      .attr(\"width\", this.outerWidth - this.margin.left - this.margin.right)\n      .attr(\"height\", this.outerHeight - this.margin.top - this.margin.bottom)\n      .attr(\"transform\", `translate(${this.margin.left} , ${this.margin.top})`);\n\n    // X Axis\n    this.xScale\n      .range([0, this.outerWidth - this.margin.left - this.margin.right])\n    this.xAxisRef = this.group.append(\"g\")\n      .attr(\"transform\", `translate(0,${this.outerHeight - this.margin.bottom})`)\n      .classed(\"x-axis\", true);\n\n    // Y Axis\n    this.yScale\n      .range([this.outerHeight - this.margin.bottom, 0]);\n    this.yAxisRef = this.group.append(\"g\")\n      .attr(\"transform\", `translate(0, 0)`)\n      .classed(\"y-axis\", true)\n  }\n\n  addSeries({ name, type, fill, stroke, strokeWidth, id }) {\n    if (!SERIES_TYPES.includes(type)) throw new Error(\"Series type not supported\");\n\n    this.seriesDict[name] = {\n      type,\n      ref: this.group.append(\"path\")\n        .attr(\"id\", id)\n        .attr(\"fill\", fill || \"none\")\n        .attr(\"stroke\", stroke || \"black\")\n        .attr(\"stroke-width\", strokeWidth || 2)\n        .classed(\"series\", true)\n    }\n  }\n\n  updateSeries(name, data, adjustAxes = true) {\n    const series = this.seriesDict[name];\n\n    this.adjustDimensions();\n\n    if (adjustAxes) this.adjustAxes(data);\n\n    switch (series.type) {\n      case \"AREA\":\n        this.updateArea(series, data)\n        break;\n      case \"LINE\":\n      default:\n        this.updateLine(series, data)\n        break;\n    }\n  }\n\n  updateLine(series, data) {\n    series.ref\n      .datum(data)\n      .transition().duration(TRANSITION_DURATION).ease(d3.easeQuadIn)\n      .attr(\"d\", d3.line()\n        .x((d) => { return this.xScale(d.timestamp) })\n        .y((d) => { return this.yScale(d.value) })\n      )\n  }\n\n\n  updateArea(series, data) {\n    series.ref\n      .datum(data)\n      .transition().duration(TRANSITION_DURATION).ease(d3.easeQuadIn)\n      .attr(\"d\", d3.area()\n        .x((d) => { return this.xScale(d.timestamp) })\n        .y0(this.yScale(0))\n        .y1((d) => {\n          return this.yScale(d.value)\n        })\n      );\n  }\n\n\n  adjustAxes(data) {\n    this.xScale.domain(d3.extent(data, (d) => d.timestamp));\n    this.xAxisRef\n      .transition().duration(TRANSITION_DURATION).ease(d3.easeLinear)\n      .call(d3.axisBottom(this.xScale));\n\n    this.yScale.domain([0, d3.max(data, (d) => d.value)]);\n    this.yAxisRef\n      .transition().duration(TRANSITION_DURATION).ease(d3.easeLinear)\n      .call(d3.axisLeft(this.yScale));\n  }\n\n  // Helper functions\n  adjustDimensions() {\n    if (this.responsiveHeight) {\n      this.outerHeight = this.elRef.offsetHeight;\n      this.svg.transition().duration(TRANSITION_DURATION).ease(d3.easeLinear)\n        .attr(\"height\", this.outerHeight);\n      this.group.transition().duration(TRANSITION_DURATION).ease(d3.easeLinear)\n        .attr(\"height\", this.outerHeight - this.margin.top - this.margin.bottom);\n      this.yScale\n        .range([this.outerHeight - this.margin.bottom, 0]);\n    }\n    if (this.responsiveWidth) {\n      this.outerWidth = this.elRef.offsetWidth;\n      this.svg.transition().duration(TRANSITION_DURATION).ease(d3.easeLinear)\n        .attr(\"width\", this.outerWidth);\n      this.group.transition().duration(TRANSITION_DURATION).ease(d3.easeLinear)\n        .attr(\"width\", this.outerWidth - this.margin.left - this.margin.right);\n      this.xScale\n        .range([0, this.outerWidth - this.margin.left - this.margin.right]);\n    }\n  }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport socketIOClient from \"socket.io-client\";\nimport D3TsChart from '../d3-helpers/d3-ts-chart';\n\nconst MAX_POINTS_TO_STORE = 50\nconst DEFAULT_X_TICKS = 20\nconst SOCKETIO_ERRORS = ['reconnect_error', 'connect_error', 'connect_timeout', 'connect_failed', 'error']\nexport class Chart extends React.Component {\n\n  tsChart;\n  socket;\n  state = {\n    data: [],\n    lastTimestamp: null,\n    connected: false,\n    error: \"\"\n  }\n\n  componentDidMount() {\n    if (this.props['sensorId'] === undefined) throw new Error(\"You have to pass 'sensorId' prop to Chart component\");\n    if (this.props['x-ticks'] > MAX_POINTS_TO_STORE) throw new Error(`You cannot display more than ${MAX_POINTS_TO_STORE} 'x-ticks'. `);\n\n    const parentRef = ReactDOM.findDOMNode(this);\n\n    this.tsChart = new D3TsChart({\n      elRef: parentRef.getElementsByClassName(\"chart-container\")[0],\n      classList: {\n        svg: \"z-chart\"\n      }\n    });\n\n    this.tsChart.addSeries({\n      name: \"sensor-data\",\n      type: \"LINE\",\n      id: \"sensor\",\n      stroke: \"steelblue\",\n    });\n\n    this.tsChart.addSeries({\n      name: \"z-score\",\n      type: \"AREA\",\n      id: \"zline\",\n      fill: \"rgba(255, 50, 50, 0.25)\",\n      stroke: \"transparent\",\n      strokeWidth: 0,\n    });\n\n    this.connect();\n  }\n\n  connect = () => {\n    this.socket = socketIOClient(`http://localhost:4001?sensor=${this.props.sensorId}`);\n    this.socket.on(\"reading\", this.storeReading)\n\n    // Various Errors handling\n    SOCKETIO_ERRORS.forEach(errType => {\n        this.socket.on(errType, (error) => this.setError(errType, error));\n      });\n  }\n  componentWillUnmount() {\n    this.socket.disconnect();\n  }\n\n  setError = (type, error) => {\n    this.setState({ data: [], connected: false, error: `${error.toString()} | ${type}` });\n  }\n\n  storeReading = (response) => {\n    const reading = JSON.parse(response);\n    this.setState((prevState) => {\n      const data = prevState.data;\n      const pointsToStore = Math.max(data.length - MAX_POINTS_TO_STORE, 0);\n\n      data.push(reading);\n\n      return {\n        data: data.slice(pointsToStore),\n        connected: true,\n        error: false,\n        lastTimestamp: new Date(data[data.length - 1].timestamp).toLocaleTimeString()\n      };\n    });\n\n    this.updateChart();\n  }\n\n  updateChart() {\n    const pointsToShow = Math.max(this.state.data.length - (this.props[\"x-ticks\"] || DEFAULT_X_TICKS), 0);\n    const data = this.state.data.slice(pointsToShow);\n    const highestValueInView = Math.max(...data.map(p => p.value))\n    const zLine = data.map(p => ({ timestamp: p.timestamp, value: p.zscore ? highestValueInView : 0 }))\n\n    this.tsChart.adjustAxes(data)\n    this.tsChart.updateSeries(\"sensor-data\", data, false);\n    this.tsChart.updateSeries(\"z-score\", zLine, false);\n  }\n\n  render = () => (\n    <div className=\"card\">\n\n      <span className={\"status \" + (this.state.connected ? 'success-bg' : 'danger-bg')}>\n        {this.state.connected ? \"Connected to\" : \"Disconnected from\"} Sensor {this.props.sensorId}\n      </span>\n\n      <span className=\"error danger\">{this.state.error}</span>\n      <span className={\"timestamp \" + (this.state.connected ? 'success' : 'danger')}>Last poll: {this.state.lastTimestamp}</span>\n\n      <div className={\"chart-container \" + (this.state.error ? 'faded' : '')}></div>\n    </div>\n  )\n\n}\nexport default Chart;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport Chart from './components/Chart'\n\nReactDOM.render(\n  <div>\n    <Chart sensorId=\"1\" />\n    <Chart sensorId=\"2\" x-ticks=\"15\" />\n    <Chart sensorId=\"3\" x-ticks=\"10\"/>\n  </div>\n  , document.getElementById('root'));\n"],"sourceRoot":""}